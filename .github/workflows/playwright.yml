name: Playwright Tests

on: [push, pull_request]

permissions:
  contents: read

env:
  FORCE_COLOR: 1

jobs:
  aureus_playwright_test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        php-versions: ["8.3"]
        node-version: ["22.13.1"]
        shard-index: [1]
        shard-total: [1]
        # shard-index: [1, 2, 3, 4, 5, 6]
        # shard-total: [6]

    name: Playwright Tests | Shard ${{ matrix.shard-index }} Of ${{ matrix.shard-total }}

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: aureuserp
        ports:
          - 3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: curl, fileinfo, gd, intl, mbstring, openssl, pdo, pdo_mysql, tokenizer, zip
          ini-values: error_reporting=E_ALL
          tools: composer:v2

      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: tests/e2e-pw/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('tests/e2e-pw/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Node.js Dependencies
        run: npm install
        working-directory: tests/e2e-pw

      - name: Install Playwright Browsers
        run: |
          sudo apt-get update --allow-releaseinfo-change
          npx playwright install --with-deps chromium
        working-directory: tests/e2e-pw

      - name: Setting Environment mysql
        run: |
          cp .env.example .env
          sed -i "s|^\(DB_CONNECTION=\s*\).*$|\1mysql|" .env
          sed -i "s|^#\?\s*DB_HOST=.*|DB_HOST=mysql|" .env
          sed -i "s|^#\?\s*DB_PORT=.*|DB_HOST=3306|" .env
          sed -i "s|^#\?\s*DB_DATABASE=.*|DB_DATABASE=aureuserp|" .env
          sed -i "s|^#\?\s*DB_USERNAME=.*|DB_USERNAME=root|" .env
          sed -i "s|^#\?\s*DB_PASSWORD=.*|DB_PASSWORD=root|" .env
          sed -i "s|^\(APP_DEBUG=\s*\).*$|\1false|" .env
          sed -i "s|^\(APP_URL=\s*\).*$|\1http://127.0.0.1:8000|" .env
          cat .env

      - name: Install Composer
        run: composer install --no-scripts --no-interaction --prefer-dist --optimize-autoloader

      - name: Generate APP_KEY (fast, non-Laravel)
        run: |
          echo "APP_KEY=$(php -r 'echo \"base64:\" . base64_encode(random_bytes(32));')" >> $GITHUB_ENV

      - name: Run post-autoload scripts (package discovery, optional upgrades)
        run: php scripts/post-autoload.php

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL service..."
          for i in {1..20}; do
            if mysqladmin ping -h mysql -u root -proot --silent; then
              echo "✅ MySQL is up!"
              break
            fi
            echo "⏳ MySQL not ready yet... ($i)"
            sleep 5
          done

      - name: Running Aureus Installer
        run: |
          php artisan erp:install \
            --force \
            --admin-name="Example" \
            --admin-email="admin@example.com" \
            --admin-password="admin123"

      - name: Start Laravel server
        run: |
          php artisan serve --host=0.0.0.0 --port=8000 > server.log 2>&1 &
          echo "Waiting for server to start..."
          timeout 30 bash -c 'until curl -s http://127.0.0.1:8000 > /dev/null; do sleep 1; done'

      - name: Run All Playwright Tests
        env:
          BASE_URL: "http://127.0.0.1:8000"
        run: |
          npx playwright test --reporter=list --config=tests/e2e-pw/playwright.config.ts --shard=${{ matrix.shard-index }}/${{ matrix.shard-total }}
        working-directory: tests/e2e-pw

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.shard-index }}-${{ github.run_id }}-${{ github.run_number }}
          path: |
            plugins/webkul/playwright/tests/e2e-pw/test-results
            storage/logs/laravel.log
          retention-days: 1
